// <auto-generated />
using System;
using GestorStock.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestorStock.Data.Migrations
{
    [DbContext(typeof(StockDbContext))]
    [Migration("20251002114145_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GestorStock.Model.Entities.Familia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Familias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "INTERCAMBIADORES"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "MERCADOS"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "SETAS DE SEVILLA"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "EXPLOTACIONES"
                        });
                });

            modelBuilder.Entity("GestorStock.Model.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FamiliaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoSoporteId")
                        .HasColumnType("int");

                    b.Property<int?>("UbicacionProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FamiliaId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("TipoSoporteId");

                    b.HasIndex("UbicacionProductoId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("GestorStock.Model.Entities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("DescripcionIncidencia")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaIncidencia")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaLlegada")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Incidencia")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("GestorStock.Model.Entities.Repuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(11, 2)");

                    b.Property<int?>("TipoRepuestoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("TipoRepuestoId");

                    b.ToTable("Repuestos");
                });

            modelBuilder.Entity("GestorStock.Model.Entities.TipoRepuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoRepuestos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Original"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Usado"
                        });
                });

            modelBuilder.Entity("GestorStock.Model.Entities.TipoSoporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TiposSoporte");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Pantalla LED"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Mupis Digital"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Monoposte"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Skyled"
                        });
                });

            modelBuilder.Entity("GestorStock.Model.Entities.UbicacionProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FamiliaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FamiliaId");

                    b.ToTable("UbicacionProductos");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            FamiliaId = 1,
                            Nombre = "Skyled moncloa"
                        },
                        new
                        {
                            Id = 6,
                            FamiliaId = 1,
                            Nombre = "Skyled plaza elíptica fachada"
                        },
                        new
                        {
                            Id = 7,
                            FamiliaId = 1,
                            Nombre = "Skyled plaza elíptica lateral a-42"
                        },
                        new
                        {
                            Id = 15,
                            FamiliaId = 1,
                            Nombre = "Skyled estación autobuses donostia pantalla 4x1 entrada"
                        },
                        new
                        {
                            Id = 16,
                            FamiliaId = 1,
                            Nombre = "Skyled estación autobuses donostia cortina digital 2x2 lateral"
                        },
                        new
                        {
                            Id = 17,
                            FamiliaId = 1,
                            Nombre = "Pantalla led exterior pasaje acceso estación autobuses donostia"
                        },
                        new
                        {
                            Id = 18,
                            FamiliaId = 1,
                            Nombre = "Pantalla led pasillo acceso estación autobuses donostia"
                        },
                        new
                        {
                            Id = 19,
                            FamiliaId = 1,
                            Nombre = "Pantalla led 2x1.50 friso escalera acceso estación autobuses donostia"
                        },
                        new
                        {
                            Id = 20,
                            FamiliaId = 1,
                            Nombre = "Pantalla lcd 55\" hall estación autobuses donostia junto restaurante"
                        },
                        new
                        {
                            Id = 21,
                            FamiliaId = 1,
                            Nombre = "Pantalla led gran formato (bilbao)"
                        },
                        new
                        {
                            Id = 22,
                            FamiliaId = 1,
                            Nombre = "Circuito handia bilbao (bilbao)"
                        },
                        new
                        {
                            Id = 23,
                            FamiliaId = 1,
                            Nombre = "Circuito kaixo bilbao (bilbao)"
                        },
                        new
                        {
                            Id = 24,
                            FamiliaId = 1,
                            Nombre = "Columna digital conexión metro a islas 2-3 planta 3 (moncloa)"
                        },
                        new
                        {
                            Id = 25,
                            FamiliaId = 1,
                            Nombre = "Pantalla digital acceso metro isla 2 (moncloa)"
                        },
                        new
                        {
                            Id = 26,
                            FamiliaId = 1,
                            Nombre = "Pantalla digital acceso metro isla 3 (moncloa)"
                        },
                        new
                        {
                            Id = 27,
                            FamiliaId = 1,
                            Nombre = "Pantalla digital acceso p° moret (moncloa)"
                        },
                        new
                        {
                            Id = 28,
                            FamiliaId = 1,
                            Nombre = "40 mupis digitales (moncloa)"
                        },
                        new
                        {
                            Id = 29,
                            FamiliaId = 1,
                            Nombre = "20 mupis digitales (plaza elíptica)"
                        },
                        new
                        {
                            Id = 30,
                            FamiliaId = 1,
                            Nombre = "Pantalla digital nivel -1 (plaza elíptica)"
                        },
                        new
                        {
                            Id = 31,
                            FamiliaId = 2,
                            Nombre = "Mercado plaza de abastos"
                        },
                        new
                        {
                            Id = 32,
                            FamiliaId = 2,
                            Nombre = "Mercado de chamartín"
                        },
                        new
                        {
                            Id = 33,
                            FamiliaId = 2,
                            Nombre = "Mercado de correos"
                        },
                        new
                        {
                            Id = 34,
                            FamiliaId = 2,
                            Nombre = "Mercado central zaragoza"
                        },
                        new
                        {
                            Id = 35,
                            FamiliaId = 2,
                            Nombre = "Mercado de el este"
                        },
                        new
                        {
                            Id = 36,
                            FamiliaId = 2,
                            Nombre = "Mercado de la imprenta valencia"
                        },
                        new
                        {
                            Id = 37,
                            FamiliaId = 2,
                            Nombre = "Mercado de la carne"
                        },
                        new
                        {
                            Id = 38,
                            FamiliaId = 2,
                            Nombre = "Mercado los mostenses"
                        },
                        new
                        {
                            Id = 39,
                            FamiliaId = 2,
                            Nombre = "Mercado vell"
                        },
                        new
                        {
                            Id = 40,
                            FamiliaId = 2,
                            Nombre = "Mercado de la ribera"
                        },
                        new
                        {
                            Id = 41,
                            FamiliaId = 2,
                            Nombre = "Mercado de san antón"
                        },
                        new
                        {
                            Id = 42,
                            FamiliaId = 2,
                            Nombre = "Mercado de san antón parking"
                        },
                        new
                        {
                            Id = 43,
                            FamiliaId = 2,
                            Nombre = "Mercado san fernando"
                        },
                        new
                        {
                            Id = 44,
                            FamiliaId = 2,
                            Nombre = "Mercado de san ildefonso"
                        },
                        new
                        {
                            Id = 45,
                            FamiliaId = 2,
                            Nombre = "Mercado de san miguel"
                        },
                        new
                        {
                            Id = 46,
                            FamiliaId = 2,
                            Nombre = "Mercado de triana"
                        },
                        new
                        {
                            Id = 47,
                            FamiliaId = 2,
                            Nombre = "Mercado del val"
                        },
                        new
                        {
                            Id = 48,
                            FamiliaId = 2,
                            Nombre = "Cúpula del milenio (valladolid)"
                        },
                        new
                        {
                            Id = 10,
                            FamiliaId = 3,
                            Nombre = "Skyled las setas de sevilla columna"
                        },
                        new
                        {
                            Id = 11,
                            FamiliaId = 3,
                            Nombre = "Skyled las setas de sevilla mupi"
                        },
                        new
                        {
                            Id = 12,
                            FamiliaId = 3,
                            Nombre = "Skyled las setas de sevilla rampa"
                        },
                        new
                        {
                            Id = 13,
                            FamiliaId = 3,
                            Nombre = "Skyled las setas de sevilla mercado"
                        },
                        new
                        {
                            Id = 14,
                            FamiliaId = 3,
                            Nombre = "Skyled las setas de sevilla parasol"
                        },
                        new
                        {
                            Id = 1,
                            FamiliaId = 4,
                            Nombre = "Skyled basauri (cc bilbondo)"
                        },
                        new
                        {
                            Id = 2,
                            FamiliaId = 4,
                            Nombre = "Skyled cc niessen"
                        },
                        new
                        {
                            Id = 3,
                            FamiliaId = 4,
                            Nombre = "Skyled cc zubiarte (cc zubiarte)"
                        },
                        new
                        {
                            Id = 4,
                            FamiliaId = 4,
                            Nombre = "Skyled granada (cc granaita)"
                        },
                        new
                        {
                            Id = 8,
                            FamiliaId = 4,
                            Nombre = "Skyled valencia"
                        },
                        new
                        {
                            Id = 9,
                            FamiliaId = 4,
                            Nombre = "Skyled valladolid (cc vallsur)"
                        });
                });

            modelBuilder.Entity("GestorStock.Model.Entities.Item", b =>
                {
                    b.HasOne("GestorStock.Model.Entities.Familia", "Familia")
                        .WithMany("Items")
                        .HasForeignKey("FamiliaId");

                    b.HasOne("GestorStock.Model.Entities.Pedido", "Pedido")
                        .WithMany("Items")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorStock.Model.Entities.TipoSoporte", "TipoSoporte")
                        .WithMany("Items")
                        .HasForeignKey("TipoSoporteId");

                    b.HasOne("GestorStock.Model.Entities.UbicacionProducto", "UbicacionProducto")
                        .WithMany("Items")
                        .HasForeignKey("UbicacionProductoId");

                    b.Navigation("Familia");

                    b.Navigation("Pedido");

                    b.Navigation("TipoSoporte");

                    b.Navigation("UbicacionProducto");
                });

            modelBuilder.Entity("GestorStock.Model.Entities.Repuesto", b =>
                {
                    b.HasOne("GestorStock.Model.Entities.Item", "Item")
                        .WithMany("Repuestos")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestorStock.Model.Entities.TipoRepuesto", "TipoRepuesto")
                        .WithMany("Repuestos")
                        .HasForeignKey("TipoRepuestoId");

                    b.Navigation("Item");

                    b.Navigation("TipoRepuesto");
                });

            modelBuilder.Entity("GestorStock.Model.Entities.UbicacionProducto", b =>
                {
                    b.HasOne("GestorStock.Model.Entities.Familia", "Familia")
                        .WithMany("UbicacionProductos")
                        .HasForeignKey("FamiliaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Familia");
                });

            modelBuilder.Entity("GestorStock.Model.Entities.Familia", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("UbicacionProductos");
                });

            modelBuilder.Entity("GestorStock.Model.Entities.Item", b =>
                {
                    b.Navigation("Repuestos");
                });

            modelBuilder.Entity("GestorStock.Model.Entities.Pedido", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("GestorStock.Model.Entities.TipoRepuesto", b =>
                {
                    b.Navigation("Repuestos");
                });

            modelBuilder.Entity("GestorStock.Model.Entities.TipoSoporte", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("GestorStock.Model.Entities.UbicacionProducto", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
